library(ISLR)
library(leaps)
attach(College)
#train/testr
set.seed(2)
train <- sample(1:nrow(College), nrow(College)/2)
fwd.college <- regsubsets(Outstate~., data = College[train,],
nvmax = 17, method = "forward")
summary(fwd.college)
plot(summary(fwd.college)$cp, type = 'b', ylab = 'CP')
points(which.min(summary(fwd.college)$cp), min(summary(fwd.college)$cp),
col ='red' , pch = 'C')
plot(summary(fwd.college)$bic, type = 'b', ylab = 'BIC')
points(which.min(summary(fwd.college)$bic), min(summary(fwd.college)$bic),
col ='red' , pch = 'C')
plot(summary(fwd.college)$adjr2, type = 'b', ylab = 'Adjusted R2')
points(which.max(summary(fwd.college)$adjr2), max(summary(fwd.college)$adjr2),
col ='red' , pch = 'C')
which.min(summary(fwd.college)$cp)
which.min(summary(fwd.college)$bic)
which.max(summary(fwd.college)$adjr2)
coef(fwd.college, id = 11)
lm.college <- lm(Outstate~ Private + Apps + Accept + Enroll
+ Top10perc + Room.Board + Personal + Terminal
+ perc.alumni + Expend + Grad.Rate, data= College, subset = train)
yhat.lm <- predict(lm.college, newdata = College[-train,])
min((yhat.lm - College[-train, "Outstate"])^2)
####################################################################
#GAM
####################################################################
library(gam)
gam.college <- gam(Outstate~ Private + s(Apps, df=2) + s(Accept, df=2)
+ s(Enroll, df=2) + s(Top10perc, df=2)
+ s(Room.Board, df=2) + s(Personal, df=2)
+ s(Terminal, df=2) + s(perc.alumni, df=2)
+ s(Expend, df=2) + s(Grad.Rate, df=2), data= College, subset = train)
par(mfrow=c(1,2))
plot(gam.college, se=TRUE)
gam.college <- gam(Outstate~ Private + s(Apps, df=1) + s(Accept, df=1)
+ s(Enroll, df=1) + s(Top10perc, df=1)
+ s(Room.Board, df=1) + s(Personal, df=1)
+ s(Terminal, df=1) + s(perc.alumni, df=1)
+ s(Expend, df=1) + s(Grad.Rate, df=1), data= College, subset = train)
par(mfrow=c(1,2))
plot(gam.college, se=TRUE)
gam.college <- gam(Outstate~ Private + s(Apps, df=1) + s(Accept, df=1)
+ s(Enroll, df=1) + s(Top10perc, df=1)
+ s(Room.Board, df=1) + s(Personal, df=1)
+ s(Terminal, df=1) + s(perc.alumni, df=1)
+ s(Expend, df=5) + s(Grad.Rate, df=1), data= College, subset = train)
par(mfrow=c(1,2))
plot(gam.college, se=TRUE)
gam.college <- gam(Outstate~ Private + s(Apps, df=5) + s(Accept, df=5)
+ s(Enroll, df=5) + s(Top10perc, df=5)
+ s(Room.Board, df=5) + s(Personal, df=5)
+ s(Terminal, df=5) + s(perc.alumni, df=5)
+ s(Expend, df=5) + s(Grad.Rate, df=5), data= College, subset = train)
par(mfrow=c(1,2))
plot(gam.college, se=TRUE)
yhat.gam <- predict(gam.college, newdata = College[-train,])
min((yhat.gam - College[-train, "Outstate"])^2)
summary(gam.college)
summary(gam.college)
min((yhat.gam - College[-train, "Outstate"])^2)
gam.college <- gam(Outstate~ Private + s(Apps, df=2) + s(Accept, df=2)
+ s(Enroll, df=2) + s(Top10perc, df=2)
+ s(Room.Board, df=2) + s(Personal, df=2)
+ s(Terminal, df=2) + s(perc.alumni, df=2)
+ s(Expend, df=2) + s(Grad.Rate, df=2), data= College, subset = train)
yhat.gam <- predict(gam.college, newdata = College[-train,])
min((yhat.gam - College[-train, "Outstate"])^2)
gam.college <- gam(Outstate~ Private + s(Apps, df=2) + s(Accept, df=2)
+ s(Enroll, df=2) + s(Top10perc, df=2)
+ s(Room.Board, df=2) + s(Personal, df=2)
+ s(Terminal, df=2) + s(perc.alumni, df=2)
+ s(Expend, df=2) + s(Grad.Rate, df=2), data= College[-train,])
yhat.gam <- predict(gam.college, newdata = College[-train,])
min((yhat.gam - College[-train, "Outstate"])^2)
gam.college <- gam(Outstate~ Private + s(Apps, df=2) + s(Accept, df=2)
+ s(Enroll, df=2) + s(Top10perc, df=2)
+ s(Room.Board, df=2) + s(Personal, df=2)
+ s(Terminal, df=2) + s(perc.alumni, df=2)
+ s(Expend, df=2) + s(Grad.Rate, df=2), data= College[train,])
yhat.gam <- predict(gam.college, newdata = College[-train,])
min((yhat.gam - College[-train, "Outstate"])^2)
set.seed(2)
train <- sample(1:nrow(College), nrow(College)/2)
gam.college <- gam(Outstate~ Private + s(Apps, df=2) + s(Accept, df=2)
+ s(Enroll, df=2) + s(Top10perc, df=2)
+ s(Room.Board, df=2) + s(Personal, df=2)
+ s(Terminal, df=2) + s(perc.alumni, df=2)
+ s(Expend, df=2) + s(Grad.Rate, df=2), data= College, subset = train)
yhat.gam <- predict(gam.college, newdata = College[-train,])
min((yhat.gam - College[-train, "Outstate"])^2)
meann((yhat.gam - College[-train, "Outstate"])^2)
yhat.gam <- predict(gam.college, newdata = College[-train,])
mean((yhat.gam - College[-train, "Outstate"])^2)
load("VIJVER.Rdata")
setwd("/home/hamed/KUL/SEM2/stat/Rob/Labs+exercises/ex05")
load("VIJVER.Rdata")
data$meta <- factor(data$meta)
#dummy coding : DM->1 , NODM->0
phenotype = ifelse(data$meta == "DM", 1, 0)
vijver <- cbind(phenotype,data[,-1])
vijver$phenotype <- as.factor(vijver$phenotype)
#train/test
train <- sample(1:nrow(vijver), nrow(vijver)/2)
vijver.test <- vijver[-train, "phenotype"]
#building a tree
vijver.tree <- tree(phenotype~., data = vijver[train,])
summary(vijver.tree)
plot(vijver.tree)
text(vijver.tree, pretty = 0, cex = 0.6)
tree.pred <- predict(vijver.tree, newdata = vijver[-train,], type = 'class')
table(tree.pred, vijver.test)
#pruning
library(ISLR)
library(tree)
setwd("/home/hamed/KUL/SEM2/stat/Rob/Labs+exercises/ex05")
load("VIJVER.Rdata")
data$meta <- factor(data$meta)
#dummy coding : DM->1 , NODM->0
phenotype = ifelse(data$meta == "DM", 1, 0)
vijver <- cbind(phenotype,data[,-1])
vijver$phenotype <- as.factor(vijver$phenotype)
#train/test
train <- sample(1:nrow(vijver), nrow(vijver)/2)
vijver.test <- vijver[-train, "phenotype"]
#building a tree
vijver.tree <- tree(phenotype~., data = vijver[train,])
summary(vijver.tree)
plot(vijver.tree)
text(vijver.tree, pretty = 0, cex = 0.6)
tree.pred <- predict(vijver.tree, newdata = vijver[-train,], type = 'class')
table(tree.pred, vijver.test)
61/94
set.seed(3)
cv.vijver <- cv.tree(tree.vijver, FUN = prune.misclass)
cv.vijver <- cv.tree(vijver.tree, FUN = prune.misclass)
set.seed(3)
cv.vijver <- cv.tree(vijver.tree, FUN = prune.misclass)
names(cv.carseats)
names(vijver.tree)
par(mfrow = c(1,2))
plot(cv.vijver$size, cv.carseats$dev, type = 'b')
plot(cv.vijver$size, cv.vijver$dev, type = 'b')
plot(cv.vijver$k, cv.vijver$dev, type = 'b')
prune.vijver <- prune.misclass(vijver.tree, best = 9)
prune.vijver <- prune.misclass(vijver.tree, best = 5)
par(mfrow = c(1,1))
plot(prune.carseats)
prune.vijver <- prune.misclass(vijver.tree, best = 5)
par(mfrow = c(1,1))
plot(prune.vijver)
text(prune.vijver, pretty = 0, cex = 0.6)
tree.pred <- predict(prune.vijver, vijver.test, type = "class")
tree.pred <- predict(prune.vijver, vijver[-train,], type = "class")
table(tree.pred, High.test)
table(tree.pred, vijver.test)
61/94
